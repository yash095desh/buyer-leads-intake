// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PropertyType {
  Apartment
  Villa
  Plot
  Office
  Retail
}

enum BHK {
  ONE    @map("1")
  TWO    @map("2")
  THREE  @map("3")
  FOUR   @map("4")
  Studio
}

enum Purpose {
  Buy
  Rent
}

enum Timeline {
  ZERO_TO_THREE_M      @map("0-3m")
  THREE_TO_SIX_M       @map("3-6m")
  GREATER_THAN_SIX_M   @map(">6m")
  Exploring
}

enum Source {
  Website
  Referral
  Walk_in
  Call
  Other
}

enum Status {
  New
  Qualified
  Contacted
  Visited
  Negotiation
  Converted
  Dropped
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  role      String   @default("user") 
  buyers    Buyer[]  
  histories BuyerHistory[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Buyer {
  id           String     @id @default(uuid())
  fullName     String     @db.VarChar(80)
  email        String?    @db.VarChar(255)
  phone        String     @db.VarChar(15)
  city         String
  propertyType PropertyType
  bhk          BHK?
  purpose      Purpose
  budgetMin    Int?
  budgetMax    Int?
  timeline     Timeline
  source       Source
  status       Status     @default(New)
  notes        String?    @db.Text
  tags         String[]
  ownerId      String
  owner        User       @relation(fields: [ownerId], references: [id])
  updatedAt    DateTime   @updatedAt

  histories    BuyerHistory[]
}

model BuyerHistory {
  id        String   @id @default(uuid())
  buyerId   String
  changedBy String
  changedAt DateTime @default(now())
  diff      Json

  buyer     Buyer    @relation(fields: [buyerId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [changedBy], references: [id], onDelete: Cascade)
}
